const axios = require("axios");

module.exports.config = {
    name: "dark",
    version: "1.0.0",
    hasPermssion: 0,
    credits: "­ЮЎ░­Юџњ­ЮџЌ­ЮџБ",
    usePrefix: false,
    description: "­ЮЎ│­Юџі­ЮџЏ­Юџћ(­ЮЎ░­ЮЎИ)",
    commandCategory: "no prefix",
    usages: "­ЮЎ░­Юџѓ­ЮЎ║/­Юџђ­Юџё­ЮЎ┤­Юџѓ­ЮџЃ­ЮЎИ­ЮЎЙ­ЮЎй­Юџѓ",
    cooldowns: 2
};

module.exports.run = async function({ api, event }) {

    const { messageID, threadID, senderID, body } = event;
    const ainz = threadID,
    kyo = messageID;
    const args = event.body.split(/\s+/);
  args.shift();
    const content = args.join(' ');
  if (!content) {
    api.sendMessage("РџФ | ­ЮЎи­Юџњ ­ЮЎИ'­Юџі­Юџќ ­ЮЎ│­Юџі­ЮџЏ­Юџћ(­ЮЎ░­ЮЎИ) ­ЮџЉ­Юџў­Юџа ­Юџї­Юџі­ЮџЌ ­Юџњ ­ЮџЉ­Юџј­ЮџЋ­ЮџЎ ­Юџб­Юџў­Юџъ ­ЮџЮ­Юџў­ЮџЇ­Юџі­Юџб?", ainz);
    return;
  }
    try {
      api.setMessageReaction("­ЪЪа", kyo, (err) => { }, true);
      api.sendMessage("­Ъњг |  ­ЮЎ│­Юџі­ЮџЏ­Юџћ(­ЮЎ░­ЮЎИ) ­Юџњ­Юџю ­ЮџЮ­ЮџЉ­Юџњ­ЮџЌ­Юџћ­Юџњ­ЮџЌ­Юџљ. . .", ainz);
        const res = await axios.get(`http://blackboxai-api-wapper.ainzkyodev.repl.co/api/box?query=${content}`);
      const text = res.data;
      const respond = text.answer;
      const formattedReply = formatFont(respond);

        if (res.data.error) {
            api.setMessageReaction("­Ъћ┤", kyo, (err) => { }, true);
            api.sendMessage(`­Ъћ┤ | ­Юџѓ­Юџў­ЮџЏ­ЮџЏ­Юџб ­Юџњ ­Юџї­Юџі­ЮџЌ­ЮџЮ ­ЮџЏ­Юџј­Юџю­ЮџЎ­Юџў­ЮџЌ­ЮџЇ ­ЮџЮ­Юџў ­Юџб­Юџў­Юџъ­ЮџЏ ${content} ­ЮџЉ­Юџј­ЮџЏ­Юџј'­Юџю ­Юџа­ЮџЉ­Юџб: ${res.data.error}`, ainz, (error, info) => {
                if (error) {
                    console.error(error);
                }
            }, kyo);
        } else {
            api.setMessageReaction("­ЪЪб", kyo, (err) => { }, true);
            api.sendMessage(`­ЪЪБ | ­Юџђ­Юџъ­Юџј­ЮџЏ­Юџб: ${content}\n\n­ЪДа | ­ЮЎи­Юџњ ­ЮџЮ­ЮџЉ­Юџњ­Юџю ­Юџњ­Юџю ­ЮЎ│­Юџі­ЮџЏ­Юџћ(­ЮЎ░­ЮЎИ) ­Юџі­ЮџЌ­ЮџЇ ­ЮџЮ­ЮџЉ­Юџњ­Юџю ­Юџњ­Юџю ­Юџќ­Юџб ­ЮЎ░­ЮџЌ­Юџю­Юџа­Юџј­ЮџЏ:\n\n${formattedReply}`, ainz, (error, info) => {
                if (error) {
                    console.error(error);
                }
            }, kyo);
        }
    } catch (error) {
        console.error(error);
        api.setMessageReaction("­Ъћ┤", kyo, (err) => { }, true);
        api.sendMessage("­Ъћ┤ | ­ЮЎ░­ЮџЌ ­Юџј­ЮџЏ­ЮџЏ­Юџў­ЮџЏ ­Юџў­Юџї­Юџї­Юџъ­ЮџЏ­Юџј­ЮџЇ ­Юџа­ЮџЉ­Юџњ­ЮџЋ­Юџј ­ЮџЈ­Юџј­ЮџЮ­Юџї­ЮџЉ­Юџњ­ЮџЌ­Юџљ ­ЮџЮ­ЮџЉ­Юџј ­Юџі­ЮџЌ­Юџю­Юџа­Юџј­ЮџЏ ­Юџў­ЮџЏ ­ЮџЇ­Юџі­ЮџЮ­Юџі!.", ainz, kyo);
    }
};

function formatFont(text) {
  const fontMapping = {
    a: "­Юќ║", b: "­Юќ╗", c: "­Юќ╝", d: "­Юќй", e: "­ЮќЙ", f: "­Юќ┐", g: "­ЮЌђ", h: "­ЮЌЂ", i: "­ЮЌѓ", j: "­ЮЌЃ", k: "­ЮЌё", l: "­ЮЌЁ", m: "­ЮЌє",
    n: "­ЮЌЄ", o: "­ЮЌѕ", p: "­ЮЌЅ", q: "­ЮЌі", r: "­ЮЌІ", s: "­ЮЌї", t: "­ЮЌЇ", u: "­ЮЌј", v: "­ЮЌЈ", w: "­ЮЌљ", x: "­ЮЌЉ", y: "­ЮЌњ", z: "­ЮЌЊ",
    A: "­Юќа", B: "­ЮќА", C: "­Юќб", D: "­ЮќБ", E: "­Юќц", F: "­ЮќЦ", G: "­Юќд", H: "­ЮќД", I: "­Юќе", J: "­ЮќЕ", K: "­Юќф", L: "­ЮќФ", M: "­Юќг",
    N: "­ЮќГ", O: "­Юќ«", P: "­Юќ»", Q: "­Юќ░", R: "­Юќ▒", S: "­Юќ▓", T: "­Юќ│", U: "­Юќ┤", V: "­Юќх", W: "­ЮќХ", X: "­Юќи", Y: "­ЮќИ", Z: "­Юќ╣"
  };

  let formattedText = "";
  for (const char of text) {
    if (char in fontMapping) {
      formattedText += fontMapping[char];
    } else {
      formattedText += char;
    }
  }

  return formattedText;
}